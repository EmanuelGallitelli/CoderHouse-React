{"ast":null,"code":"var _jsxFileName = \"/home/german/Documentos/CODERHOUSE/React/preEntrega2Soto/src/Components/ItemList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Spinner from './Spinner';\nimport Item from \"./Item\";\nimport { useParams } from \"react-router-dom\";\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ItemList() {\n  _s();\n\n  const [cartas, setCartas] = useState( /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 40\n  }, this));\n  const [loading, isLoading] = useState(false);\n  const {\n    categoria\n  } = useParams();\n  useEffect(() => {\n    const db = getFirestore();\n    const docRef = collection(db, 'items');\n    getDocs(docRef).then(snapshot => {\n      setCartas(snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })));\n      isLoading(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap justify-start mt-20\",\n    children: !loading ? cartas : categoria ? cartas.filter(libro => libro.categoria === categoria).map(el => /*#__PURE__*/_jsxDEV(Item, {\n      nombre: el.nombre,\n      calificacion: el.calificacion,\n      autor: el.autor,\n      img: el.img,\n      categoria: el.categoria,\n      reseña: el.reseña,\n      id: el.id\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)) : cartas.map(el => /*#__PURE__*/_jsxDEV(Item, {\n      nombre: el.nombre,\n      calificacion: el.calificacion,\n      autor: el.autor,\n      img: el.img,\n      categoria: el.categoria,\n      reseña: el.reseña,\n      id: el.id\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ItemList, \"AdgS58ZtSCRoNEG0u9is5eOqTj0=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["useState","useEffect","Spinner","Item","useParams","getFirestore","collection","getDocs","ItemList","cartas","setCartas","loading","isLoading","categoria","db","docRef","then","snapshot","docs","map","doc","id","data","filter","libro","el","nombre","calificacion","autor","img","reseña"],"sources":["/home/german/Documentos/CODERHOUSE/React/preEntrega2Soto/src/Components/ItemList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Spinner from './Spinner'\nimport Item from \"./Item\";\nimport { useParams } from \"react-router-dom\";\n\nimport {getFirestore, collection, getDocs} from 'firebase/firestore'\n\n\n\nexport default function ItemList(){\n\n  const [cartas, setCartas] = useState(<Spinner/>);\n  const [loading, isLoading] = useState(false)\n  const {categoria} = useParams();\n  \n  useEffect(() => {\n    \nconst db = getFirestore()\n\nconst docRef = collection(db, 'items')\n\ngetDocs(docRef)\n  .then((snapshot) => {\n  setCartas(snapshot.docs.map((doc)=> ({id:doc.id, ...doc.data()})));\n        isLoading(true);\n  })\n  }, []);\n\n\n\n    return ( \n        <div className=\"flex flex-wrap justify-start mt-20\">\n          {!loading ? cartas \n          : categoria ? cartas\n          .filter((libro) => libro.categoria === categoria)\n          .map((el)=>(\n\n            <Item \n            key={el.id}\n            nombre={el.nombre}\n            calificacion={el.calificacion}\n            autor={el.autor}\n            img = {el.img}\n            categoria = {el.categoria}\n            reseña = {el.reseña}\n            id={el.id}\n\n            />\n          ))\n        : cartas\n        .map((el)=>(\n\n          <Item \n          key={el.id}\n          nombre={el.nombre}\n          calificacion={el.calificacion}\n          autor={el.autor}\n          img = {el.img}\n          categoria = {el.categoria}\n          reseña = {el.reseña}\n          id={el.id}\n\n          />\n        ))\n        }\n        </div>\n\n    );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAAQC,YAAR,EAAsBC,UAAtB,EAAkCC,OAAlC,QAAgD,oBAAhD;;AAIA,eAAe,SAASC,QAAT,GAAmB;EAAA;;EAEhC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,eAAC,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAAD,CAApC;EACA,MAAM,CAACW,OAAD,EAAUC,SAAV,IAAuBZ,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM;IAACa;EAAD,IAAcT,SAAS,EAA7B;EAEAH,SAAS,CAAC,MAAM;IAElB,MAAMa,EAAE,GAAGT,YAAY,EAAvB;IAEA,MAAMU,MAAM,GAAGT,UAAU,CAACQ,EAAD,EAAK,OAAL,CAAzB;IAEAP,OAAO,CAACQ,MAAD,CAAP,CACGC,IADH,CACSC,QAAD,IAAc;MACpBP,SAAS,CAACO,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAS;QAACC,EAAE,EAACD,GAAG,CAACC,EAAR;QAAY,GAAGD,GAAG,CAACE,IAAJ;MAAf,CAAT,CAAlB,CAAD,CAAT;MACMV,SAAS,CAAC,IAAD,CAAT;IACL,CAJH;EAKG,CAXQ,EAWN,EAXM,CAAT;EAeE,oBACI;IAAK,SAAS,EAAC,oCAAf;IAAA,UACG,CAACD,OAAD,GAAWF,MAAX,GACCI,SAAS,GAAGJ,MAAM,CACnBc,MADa,CACLC,KAAD,IAAWA,KAAK,CAACX,SAAN,KAAoBA,SADzB,EAEbM,GAFa,CAERM,EAAD,iBAEH,QAAC,IAAD;MAEA,MAAM,EAAEA,EAAE,CAACC,MAFX;MAGA,YAAY,EAAED,EAAE,CAACE,YAHjB;MAIA,KAAK,EAAEF,EAAE,CAACG,KAJV;MAKA,GAAG,EAAIH,EAAE,CAACI,GALV;MAMA,SAAS,EAAIJ,EAAE,CAACZ,SANhB;MAOA,MAAM,EAAIY,EAAE,CAACK,MAPb;MAQA,EAAE,EAAEL,EAAE,CAACJ;IARP,GACKI,EAAE,CAACJ,EADR;MAAA;MAAA;MAAA;IAAA,QAJY,CAAH,GAgBXZ,MAAM,CACPU,GADC,CACIM,EAAD,iBAEH,QAAC,IAAD;MAEA,MAAM,EAAEA,EAAE,CAACC,MAFX;MAGA,YAAY,EAAED,EAAE,CAACE,YAHjB;MAIA,KAAK,EAAEF,EAAE,CAACG,KAJV;MAKA,GAAG,EAAIH,EAAE,CAACI,GALV;MAMA,SAAS,EAAIJ,EAAE,CAACZ,SANhB;MAOA,MAAM,EAAIY,EAAE,CAACK,MAPb;MAQA,EAAE,EAAEL,EAAE,CAACJ;IARP,GACKI,EAAE,CAACJ,EADR;MAAA;MAAA;MAAA;IAAA,QAHA;EAlBF;IAAA;IAAA;IAAA;EAAA,QADJ;AAsCH;;GA3DuBb,Q;UAIFJ,S;;;KAJEI,Q"},"metadata":{},"sourceType":"module"}
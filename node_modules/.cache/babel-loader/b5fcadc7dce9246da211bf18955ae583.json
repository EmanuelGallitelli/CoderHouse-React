{"ast":null,"code":"var _jsxFileName = \"/home/german/Documentos/CODERHOUSE/React/preEntrega2Soto/src/Components/ItemList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Spinner from './Spinner';\nimport Item from \"./Item\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ItemList() {\n  _s();\n\n  const [cartas, setCartas] = useState( /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 40\n  }, this));\n  const [loading, isLoading] = useState(false);\n  const {\n    categoria\n  } = useParams(); //SIMULACION API\n\n  const listado = () => {\n    let items = require(\"../Backend/productos.json\");\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(items);\n        isLoading(true);\n      }, 2000);\n    });\n  };\n\n  useEffect(() => {\n    async function fetchedItems() {\n      const items = await listado();\n      setCartas(items);\n    }\n\n    fetchedItems();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap justify-start\",\n    children: !loading ? cartas : categoria ? cartas.filter(libro => libro.categoria === categoria).map(el => /*#__PURE__*/_jsxDEV(Item, {\n      nombre: el.nombre,\n      calificacion: el.calificacion,\n      autor: el.autor,\n      img: el.img,\n      categoria: el.categoria,\n      reseña: el.reseña,\n      id: el.id\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)) : cartas.map(el => /*#__PURE__*/_jsxDEV(Item, {\n      nombre: el.nombre,\n      calificacion: el.calificacion,\n      autor: el.autor,\n      img: el.img,\n      categoria: el.categoria,\n      reseña: el.reseña,\n      id: el.id\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ItemList, \"AdgS58ZtSCRoNEG0u9is5eOqTj0=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["useState","useEffect","Spinner","Item","useParams","ItemList","cartas","setCartas","loading","isLoading","categoria","listado","items","require","Promise","resolve","reject","setTimeout","fetchedItems","filter","libro","map","el","nombre","calificacion","autor","img","reseña","id"],"sources":["/home/german/Documentos/CODERHOUSE/React/preEntrega2Soto/src/Components/ItemList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Spinner from './Spinner'\nimport Item from \"./Item\";\nimport { useParams } from \"react-router-dom\";\n\n\n\nexport default function ItemList(){\n\n  const [cartas, setCartas] = useState(<Spinner/>);\n  const [loading, isLoading] = useState(false)\n  const {categoria} = useParams();\n  \n\n  //SIMULACION API\n  const listado = () => {\n    let items = require(\"../Backend/productos.json\")\n    return new Promise ((resolve, reject) => {\n        setTimeout(() => {\n            resolve(items)\n            isLoading(true)\n        }, 2000);\n    })\n  }\n\n\n  useEffect(() => {\n    async function fetchedItems(){\n      const items = await listado(); \n      setCartas(items)\n    }\n\n    fetchedItems()\n  }, []);\n\n  \n\n\n\n    return ( \n        <div className=\"flex flex-wrap justify-start\">\n          {!loading ? cartas \n          : categoria ? cartas\n          .filter((libro) => libro.categoria === categoria)\n          .map((el)=>(\n\n            <Item \n            key={el.id}\n            nombre={el.nombre}\n            calificacion={el.calificacion}\n            autor={el.autor}\n            img = {el.img}\n            categoria = {el.categoria}\n            reseña = {el.reseña}\n            id={el.id}\n\n            />\n          ))\n        : cartas\n        .map((el)=>(\n\n          <Item \n          key={el.id}\n          nombre={el.nombre}\n          calificacion={el.calificacion}\n          autor={el.autor}\n          img = {el.img}\n          categoria = {el.categoria}\n          reseña = {el.reseña}\n          id={el.id}\n\n          />\n        ))\n        }\n        </div>\n\n    );\n}"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAIA,eAAe,SAASC,QAAT,GAAmB;EAAA;;EAEhC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,eAAC,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAAD,CAApC;EACA,MAAM,CAACQ,OAAD,EAAUC,SAAV,IAAuBT,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM;IAACU;EAAD,IAAcN,SAAS,EAA7B,CAJgC,CAOhC;;EACA,MAAMO,OAAO,GAAG,MAAM;IACpB,IAAIC,KAAK,GAAGC,OAAO,CAAC,2BAAD,CAAnB;;IACA,OAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACrCC,UAAU,CAAC,MAAM;QACbF,OAAO,CAACH,KAAD,CAAP;QACAH,SAAS,CAAC,IAAD,CAAT;MACH,CAHS,EAGP,IAHO,CAAV;IAIH,CALM,CAAP;EAMD,CARD;;EAWAR,SAAS,CAAC,MAAM;IACd,eAAeiB,YAAf,GAA6B;MAC3B,MAAMN,KAAK,GAAG,MAAMD,OAAO,EAA3B;MACAJ,SAAS,CAACK,KAAD,CAAT;IACD;;IAEDM,YAAY;EACb,CAPQ,EAON,EAPM,CAAT;EAaE,oBACI;IAAK,SAAS,EAAC,8BAAf;IAAA,UACG,CAACV,OAAD,GAAWF,MAAX,GACCI,SAAS,GAAGJ,MAAM,CACnBa,MADa,CACLC,KAAD,IAAWA,KAAK,CAACV,SAAN,KAAoBA,SADzB,EAEbW,GAFa,CAERC,EAAD,iBAEH,QAAC,IAAD;MAEA,MAAM,EAAEA,EAAE,CAACC,MAFX;MAGA,YAAY,EAAED,EAAE,CAACE,YAHjB;MAIA,KAAK,EAAEF,EAAE,CAACG,KAJV;MAKA,GAAG,EAAIH,EAAE,CAACI,GALV;MAMA,SAAS,EAAIJ,EAAE,CAACZ,SANhB;MAOA,MAAM,EAAIY,EAAE,CAACK,MAPb;MAQA,EAAE,EAAEL,EAAE,CAACM;IARP,GACKN,EAAE,CAACM,EADR;MAAA;MAAA;MAAA;IAAA,QAJY,CAAH,GAgBXtB,MAAM,CACPe,GADC,CACIC,EAAD,iBAEH,QAAC,IAAD;MAEA,MAAM,EAAEA,EAAE,CAACC,MAFX;MAGA,YAAY,EAAED,EAAE,CAACE,YAHjB;MAIA,KAAK,EAAEF,EAAE,CAACG,KAJV;MAKA,GAAG,EAAIH,EAAE,CAACI,GALV;MAMA,SAAS,EAAIJ,EAAE,CAACZ,SANhB;MAOA,MAAM,EAAIY,EAAE,CAACK,MAPb;MAQA,EAAE,EAAEL,EAAE,CAACM;IARP,GACKN,EAAE,CAACM,EADR;MAAA;MAAA;MAAA;IAAA,QAHA;EAlBF;IAAA;IAAA;IAAA;EAAA,QADJ;AAsCH;;GAtEuBvB,Q;UAIFD,S;;;KAJEC,Q"},"metadata":{},"sourceType":"module"}